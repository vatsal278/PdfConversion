// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal278/PdfConversion/internal/logic (interfaces: PdfConversionLogicIer)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	model "github.com/PereRohit/util/model"
	gomock "github.com/golang/mock/gomock"
	model0 "github.com/vatsal278/PdfConversion/internal/model"
)

// MockPdfConversionLogicIer is a mock of PdfConversionLogicIer interface.
type MockPdfConversionLogicIer struct {
	ctrl     *gomock.Controller
	recorder *MockPdfConversionLogicIerMockRecorder
}

// MockPdfConversionLogicIerMockRecorder is the mock recorder for MockPdfConversionLogicIer.
type MockPdfConversionLogicIerMockRecorder struct {
	mock *MockPdfConversionLogicIer
}

// NewMockPdfConversionLogicIer creates a new mock instance.
func NewMockPdfConversionLogicIer(ctrl *gomock.Controller) *MockPdfConversionLogicIer {
	mock := &MockPdfConversionLogicIer{ctrl: ctrl}
	mock.recorder = &MockPdfConversionLogicIerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPdfConversionLogicIer) EXPECT() *MockPdfConversionLogicIerMockRecorder {
	return m.recorder
}

// HealthCheck mocks base method.
func (m *MockPdfConversionLogicIer) HealthCheck() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockPdfConversionLogicIerMockRecorder) HealthCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockPdfConversionLogicIer)(nil).HealthCheck))
}

// Ping mocks base method.
func (m *MockPdfConversionLogicIer) Ping(arg0 *model0.PingRequest) *model.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(*model.Response)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockPdfConversionLogicIerMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockPdfConversionLogicIer)(nil).Ping), arg0)
}
